<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_adsi_cust_credit.PreviewRequest_CreditCustomer</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>PreviewRequest_CreditCustomer</name>
        <script><![CDATA[var PreviewRequest_CreditCustomer = Class.create();
PreviewRequest_CreditCustomer.prototype = {
    initialize: function()
	{
    },
	//---------------------------------------------------------------------------------------
	//------ html styles
	//---------------------------------------------------------------------------------------
	solidBorder: 'border: 1px solid #000000;',
	textSize: 'font-size: 10pt;',
	textFont: 'font-family: verdana,geneva;',
	cellBgBlue: 'background-color: #a1d8f7;',
	cellBgYellow: 'background-color: yellow;',
	cellBgGray: 'background-color: #adadad;',
	underlineText: 'text-decoration: underline;',
	//---------------------------------------------------------------------------------------
	//html formatters
	//---------------------------------------------------------------------------------------
	boldText: function(textToBold)
	{
		return '<strong>' + textToBold + '</strong>';
	},
	//---------------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------------
	generatePreview: function(currentObject)
	{
		//main table creation
		//cell contains the following:
		//----------------------------
		//cell_00 - Credit customer details
		//cell_10 - About the Company, Business w/ ASX , Liquidity Ratio
		//cell_11 - Financial Data Table
		//cell_21 - Scores and Rating Table
		//cell_30 - Recommendation Label
		//cell_31 - Recommendation Value
		//----------------------------
		
		var bigTable = 
			"<table width='100%'>" +
			"<tr>" +
				"<td>" + this.cell_00(currentObject) + "</td>" +
				"<td>" + "" + "</td>" +
			"</tr>" +
			"<tr>" +
				"<td>" + this.cell_10(currentObject) + "</td>" +
				"<td>" + this.cell_11(currentObject) + "</td>" +
			"</tr>" +
			"<tr>" +
				"<td>" + "" + "</td>" +
				"<td>" + this.cell_21(currentObject) + "</td>" +
			"</tr>" +
			"<tr>" +
				this.cell_30() +
				this.cell_31(currentObject) + 
			"</tr>";			
			
		return bigTable;
	},
	cell_00: function(currentObject) //Credit customer details
	{
		var creditCustomer = 'Credit Customer Name';
		var gbpNumber = 'GBP123SAMPLE';
		var accName = '';
		//fill in details if data is available
		if(currentObject)
		{
			creditCustomer = String(currentObject.credit_customer.name);
			gbpNumber = String(currentObject.credit_customer.gbp_number);
			//fill in account names
			for(var ctr = 1; ctr <= 6; ctr++)
			{
				if(String(currentObject.credit_customer["active_child_account_" + ctr]) != '')
				{
					if(accName == '')
					{
						accName = String(currentObject.credit_customer["active_child_account_" + ctr]);
					}
					else
					{
						accName = accName + '<br></br>';
						accName = accName + String(currentObject.credit_customer["active_child_account_" + ctr]);
						
					}
				}
			}
			if(accName == '')
				accName = 'No Child Accounts';
		}
		
		var subTable = 
		"<table>" +
			"<tr>" + 
				'<td style="' +this.textSize + this.textFont + '">' +
					"Below is the credit review for " + creditCustomer + ":  " + currentObject.short_description +
				"</td>" +
			"</tr>" +
			"<tr>" +
				'<td style="' +this.textSize + this.textFont + '">' +
					this.boldText("Required Credit Limit:") + " " +"</span>"+ currentObject.required_credit_limit.getDisplayValue() +
				"</td>" +
			"</tr>" +
			"<tr>" +
				'<td style="' +this.textSize + this.textFont + '">' +
					this.boldText("GBP Number:") + " " +"</span>"+ gbpNumber +
				"</td>" +
			"</tr>" +
			"<tr>" +
				'<td style="' +this.textSize + this.textFont + '">' +
					this.boldText("Active Child Accounts:") +
				"</td>" +
			"</tr>" +
			"<tr>" +
				'<td style="' +this.textSize + this.textFont + '">' +
				accName +
				"</td>" +
			"</tr>" +
		"</table>";
		
		return subTable;
	},
	cell_10: function(currentObject) //About the Company, Business w/ ASX , Liquidity Ratio
	{
		var cellComponent =
		this.aboutTheCompany(currentObject) +
			'<p>&nbsp;</p>' +
		this.businessWithAsx(currentObject) +
			'<p>&nbsp;</p>' +
		this.financialHighlights(currentObject) +
			'<p>&nbsp;</p>';
		//this.liquidityRatio(currentObject);
		
		return cellComponent;

	},
	cell_11: function(currentObject) //Financial Data Table
	{
			var currentYear = '12/31/9999';
			var prevYear = '12/31/9999';
		if(currentObject)
		{
			//get financial dates and format it
			currentYear = new GlideDate();
			currentYear.setValue(currentObject.financial_metric_current_year.fiscal_year_end_date);
			currentYear = currentYear.getByFormat("MM/dd/yyyy");
			prevYear = new GlideDate();
			prevYear.setValue(currentObject.financial_metric_previous_year.fiscal_year_end_date);
			prevYear = prevYear.getByFormat("MM/dd/yyyy");
		}
		var cellFields =
			[
				{'fieldName':'cash','cellType':'normal'},
				{'fieldName':'accounts_receivable','cellType':'normal'},
				{'fieldName':'inventory','cellType':'normal'},
				
				{'fieldName': 'blank','cellType':'blankRow'},
				
				{'fieldName':'current_assets','cellType':'normal'},
				{'fieldName':'current_liabilities','cellType':'normal'},
				
				{'fieldName':'working_capital','cellType':'blue'},
				
				{'fieldName': 'blank','cellType':'blankRow'},
				
				{'fieldName':'total_assets','cellType':'normal'},
				{'fieldName':'total_liability','cellType':'normal'},
				
				{'fieldName':'net_worth','cellType':'blue'},
				
				{'fieldName': 'blank','cellType':'blankRow'},

				{'fieldName':'net_sales','cellType':'normal'},
				{'fieldName':'net_fixed_assets','cellType':'normal'},
				
				{'fieldName': 'blank','cellType':'blankRow'},
				
				{'fieldName':'net_income','cellType':'normal'},
				{'fieldName':'income_tax','cellType':'normal'},
				{'fieldName':'interest_expenses','cellType':'normal'},
				{'fieldName':'interest_investment_income','cellType':'normal'},
				{'fieldName':'amortization','cellType':'yellow'},
				{'fieldName':'depreciation','cellType':'normal'},
				
				{'fieldName':'ebitda','cellType':'blue'},
				
				{'fieldName': 'blank','cellType':'blankRow'},

				{'fieldName':'cash_flow_from_operations','cellType':'normal'},
				{'fieldName':'capital_expenditures','cellType':'normal'},
				
				{'fieldName':'free_cash_flow','cellType':'blue'},

				{'fieldName': 'blank','cellType':'blankRow'},
				
				{'fieldName':'total_debt','cellType':'yellow'},
				{'fieldName':'net_debt','cellType':'yellow'},
				{'fieldName':'net_debt_ebitda_ratio','cellType':'yellow'},

				{'fieldName': 'blank','cellType':'blankRow'},
				

				{'fieldName':'current_ratio','cellType':'normal'},
				{'fieldName':'quick_ratio','cellType':'normal'},
				{'fieldName':'cash_ratio','cellType':'normal'},

			];
		var normalCell = this.solidBorder + this.textSize + this.textFont;
		var blueCell = this.cellBgBlue + normalCell;
		var yellowCell = this.cellBgYellow + normalCell;
		var normalEmptyRow =
			'<tr>' +
					'<td style="' + normalCell + '">&nbsp;</td>' +
					'<td style="' + normalCell + '">&nbsp;</td>' +
					'<td style="' + normalCell + '">&nbsp;</td>' +
					'<td style="' + normalCell + '">&nbsp;</td>' +
			'</tr>';
		
		var subTable =
			'<table cellspacing="0" cellpadding="1" style="width: 100%; margin-left: auto; margin-right: auto;' + this.solidBorder + '">' +
				'<tbody>' +
				'<tr>' +
					'<td style="text-align: center; '+ normalCell + '" colspan="4">' + this.boldText('Financial Data') + '</td>' +
				'</tr>' +
				'<tr>' +

					'<td style="' + blueCell +'">' + this.boldText('Financial Metrics') + '</td>' +
					'<td style="' + blueCell + '">' + this.boldText(currentYear) + '</td>' +
					'<td style="' + blueCell + '">' + this.boldText(prevYear) + '</td>' +
					'<td style="' + blueCell + '">' + this.boldText('Diff&nbsp;%') + '</td>' +
				'</tr>';
		if(currentObject)
		{
			//browse cellfields
			//retained the try catch to still send the email even if an error occurs
			try
			{
				for(var ctr = 0; ctr < cellFields.length; ctr++)
				{
					if(cellFields[ctr].cellType == 'blankRow')
					{
						subTable = subTable + normalEmptyRow;
						continue;
						//required to continue as the script will have error if fieldName does not exist on the table
					}
					//fieldName is necessary to be on the referenced table
					var fieldLabel = currentObject.financial_metric_current_year[cellFields[ctr].fieldName].getLabel();
					var currentYearRaw = currentObject.financial_metric_current_year[cellFields[ctr].fieldName];
					var prevYearRaw = currentObject.financial_metric_previous_year[cellFields[ctr].fieldName];
					var currentYearValue = currentYearRaw.getDisplayValue();
					var previousYearValue = prevYearRaw.getDisplayValue();


					if(cellFields[ctr].cellType == 'normal')
					{
						subTable = subTable +
							'<tr>' +
							'<td style="' + normalCell + '">' + fieldLabel + '</td>' +
							'<td style="' + normalCell + '">' + currentYearValue + '</td>' +
							'<td style="' + normalCell + '">' + previousYearValue + '</td>' +
							'<td style="' + normalCell + '">' + this.getDiffPercent(currentYearRaw,prevYearRaw) + '%</td>' +
							'</tr>';					
						continue;
					}
					if(cellFields[ctr].cellType == 'blue')
					{
						subTable = subTable +
							'<tr>' +
							'<td style="' + blueCell + '">' + this.boldText(fieldLabel) + '</td>' +
							'<td style="' + blueCell + '">' + this.boldText(currentYearValue) + '</td>' +
							'<td style="' + blueCell + '">' + this.boldText(previousYearValue) + '</td>' +
							'<td style="' + blueCell + '">' + this.boldText(this.getDiffPercent(currentYearRaw,prevYearRaw) +' %') + '</td>' +
							'</tr>';
						continue;
					}
					if(cellFields[ctr].cellType == 'yellow')
					{
						subTable = subTable +
							'<tr>' +
							'<td style="' + yellowCell + '">' + this.boldText(fieldLabel) + '</td>' +
							'<td style="' + yellowCell + '">' + this.boldText(currentYearValue) + '</td>' +
							'<td style="' + yellowCell + '">' + this.boldText(previousYearValue) + '</td>' +
							'<td style="' + yellowCell + '">' + this.boldText(this.getDiffPercent(currentYearRaw,prevYearRaw) +' %') + '</td>' +
							'</tr>';
						continue;
					}
				}				
			}
			catch(e)
			{
				//display error if have one
				subTable = subTable +
					"<tr><td colspan=4>" + e + "</td></tr>";
			}

 		}
		//close table before returning
		subTable = subTable + 
			'</tbody>' +
		'</table>';

		return subTable;
	},
	cell_21: function(currentObject) //Scores and Rating Table
	{
		var normalCell = this.solidBorder + this.textSize + this.textFont;
		var blueCell = this.cellBgBlue + normalCell;

		if(currentObject)
		{
			//fill in details
		}
		var subTable =
		'<table cellspacing="0" cellpadding="1" style="width: 100%; ' +this.solidBorder + '">' +
			'<tbody>' +
			'<tr>' +
				'<td style="' + blueCell + '">' + this.boldText('Scores &amp; Rating') + '</td>' +
				'<td style="' + blueCell + '">' + this.boldText('Grade') + '</td>' +
				'<td style="' + blueCell + '">' + this.boldText('Analysis') + '</td>' +
			'</tr>';
		//use this to be able to send the email and track for errors
		try
		{
			subTable = subTable +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'Commercial Credit Score' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["commercial_credit_score_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["commercial_credit_score_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'Frisk Score' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["frisk_score_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["frisk_score_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'Z" Score' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["z_score_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["z_score_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + "Moody's" + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["moodys_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["moodys_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'Fitch' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["fitch_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["fitch_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'DBT Index' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["dbt_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["dbt_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'PAYDEX' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["paydex_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["paydex_analysis"]) + '</td>' +
			'</tr>' +
			'<tr>' +
				'<td style="' + normalCell + '">' + 'Fin Stress' + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["fin_stress_grade"]) + '</td>' +
				'<td style="' + normalCell + '">' + String(currentObject["fin_stress_analysis"]) + '</td>' +
			'</tr>';			
		}
		catch(e)
		{
			subTable = subTable +
			"<tr><td>" + e + "</td></tr>";
		}

			subTable = subTable +
			'</tbody>' +
		'</table>';
		
		return subTable;
	},
	cell_30: function() //Recommendation Label
	{
		var subPart = 
		'<td style="' + this.cellBgGray + '">' +
		'<p><span style="' + this.textFont + this.textSize + '">'+this.boldText('Recommendation')+'</span></p>' +
		'</td>';
		
		return subPart;
	},
	cell_31: function(currentObject) //Recommendation Value
	{
		var jeRecommendations = currentObject.recommendation.getJournalEntry(-1);
		//gets all journal entries as a string where each entry is delimited by '\n\n'
		var arrRecommendations = jeRecommendations.split("\n\n");
		
		var subPart = 
		'<td style="' + this.textFont + this.textSize + '">';
		try
		{
			for (var ndx = (arrRecommendations.length - 1); ndx >= 0; ndx--) {
				subPart = subPart +
				'<p align="justify">' + arrRecommendations[ndx] + '</p>';
			}   // for (var ndx = 0; ndx < arrRecommendations.length; ndx++)
			//subPart = subPart +
				'<p align="justify">' + currentObject["recommendation"] + '</p>';			
		}
		catch(e)
		{
			subPart = subPart + "<p>" + e + "</p>";
		}

		
		subPart = subPart +
		'</td>';
		
		return subPart;
	},
	//----------------------------------------------------------------------------------------------------
	//--- Cell 10 ELEMENT FUNCTIONS ----------------------------------------------------------------------
	//----------------------------------------------------------------------------------------------------
	aboutTheCompany: function(currentObject)
	{
		var aboutTheCom = 'Test company description';
		if(currentObject)
		{
			//fill in about the company details
			aboutTheCom = String(currentObject.credit_customer.about_the_company);
		}
		var subTable =
		'<table style="width: 100%;">' +
			'<tbody>' +
			'<tr>' +
				'<td>' + 
					'<span style="' + this.textSize + this.textFont + '">' + this.boldText('About the company:') + '</span>' + 
				'</td>' +
			'</tr>' +
			'<tr>' +
				'<td>' +
					'<p style="'+ this.textSize + this.textFont + '" align="justify">' +
					aboutTheCom +
					"</p>" +
				'</td>' +
			'</tr>' +
			'</tbody>' +
		'</table>';
		
		return subTable;		
	},	
	businessWithAsx: function(currentObject)
	{
		var customerSince = 'yyyy';
		var payHabit = 'SamplePayHabit';
		var currentYear = '9999';
		if(currentObject)
		{
			customerSince = String(currentObject.credit_customer.customer_since);
			payHabit = String(currentObject.credit_customer.pay_habit);
			currentYear = new GlideDate();
			currentYear.setValue(currentObject.financial_metric_current_year.fiscal_year_end_date);
			currentYear = currentYear.getYearNoTZ();
		}
		var underLineLabel = this.textSize + this.textFont + this.underlineText;
		var subTable =
		'<table>' +
			'<tbody>' +
				'<tr>' +
					'<td style="' + underLineLabel + '">' + this.boldText('Business With AdvanSix:') + '</td>' +
				'</tr>' +
				'<tr>' +
				'<td>' + 
					'<p style="' +this.textSize + this.textFont + '">' + this.boldText('Customer Since:') + '&nbsp;' + customerSince + '</p>' +
					'<p style="' +this.textSize + this.textFont + '">' + this.boldText(currentYear + ' Forecasted Sales:') + '&nbsp;' + currentObject.credit_customer.current_year_forecasted_sales.getDisplayValue() + '</p>' +
					'<p style="' +this.textSize + this.textFont + '">' + this.boldText('Prior Year Sales:') + '&nbsp;' + currentObject.credit_customer.prior_year_sales.getDisplayValue() + '</p>' +
					'<p style="' +this.textSize + this.textFont + '">' + this.boldText('Current Payment Terms:') + '&nbsp;' + currentObject.credit_customer.current_payment_terms.getDisplayValue() + '</p>' +
					'<p style="' +this.textSize + this.textFont + '">' + this.boldText('Current Exposure:') + '&nbsp;' + currentObject.credit_customer.current_exposure.getDisplayValue() + '</p>' +
					'<p style="' +this.textSize + this.textFont + '">' + this.boldText('Pay Habit:') + '&nbsp;' + payHabit + '</p>' +
				'</td>' +
				'</tr>' +
			'</tbody>' +
		'</table>';
		
		return subTable;
	},
	financialHighlights: function(currentObject)
	{
		var underLineLabel = this.textSize + this.textFont + this.underlineText;
		var financialHigh = 'This is an example of a finance highlight';
		var currentYear = '9999';
		var prevYear = '8888';
		if(currentObject)
		{
			financialHigh = String(currentObject.credit_customer.financial_highlights);
			currentYear = new GlideDate();
			currentYear.setValue(currentObject.financial_metric_current_year.fiscal_year_end_date);
			currentYear = currentYear.getYearNoTZ();
			prevYear = new GlideDate();
			prevYear.setValue(currentObject.financial_metric_previous_year.fiscal_year_end_date);
			prevYear = prevYear.getYearNoTZ();
		}
		var subTable =
		'<table style="width: 100%;">' +
			'<tbody>' +
			'<tr>' +
				'<td>' + 
				'<span style="' + underLineLabel + '">' + this.boldText('Financial Highlights for '+prevYear+' - '+currentYear+':') + '</span>' + 
				'</td>' +
			'</tr>' +
			'<tr>' +
				'<td>' +
				'<p style="' + this.textSize + this.textFont + '" align="justify">' +
					financialHigh +
				"</p>" +
				'</td>' +
			'</tr>' +
			'</tbody>' +
		'</table>';
		
		return subTable;		
	},
	liquidityRatio: function(currentObject)
	{
		var liquidityRatio = 'A sample description of the ratios';
		if(currentObject)
		{
			liquidityRatio = String(currentObject.credit_customer.liquidity_ratio);
		}
		var underLineLabel = this.textSize + this.textFont + this.underlineText;

		var subTable =
		'<table style="width: 100%;">' +
			'<tbody>' +
			'<tr>' +
				'<td>' + 
					'<span style="' + underLineLabel + '">' + this.boldText('Liquidity Ratio:') + '</span>' + 
				'</td>' +
			'</tr>' +
			'<tr>' +
				'<td>' +
				'<p style="' + this.textSize + this.textFont + '" align="justify">' +
					liquidityRatio +
				"</p>" +
				'</td>' +
			'</tr>' +
			'</tbody>' +
		'</table>';
		
		return subTable;
	},
	//----------------------------------------------------------------------------------------------------
	//--- OTHER FUNCTIONS --------------------------------------------------------------------------------
	//----------------------------------------------------------------------------------------------------
	getDiffPercent: function(currentYearValue,prevYearValue)
	{
		var result_value = '';
		currentYearValue = Number(currentYearValue);
		prevYearValue = Number(prevYearValue);
		if(currentYearValue == prevYearValue)
			result_value = 0;
		else if(prevYearValue == 0 && currentYearValue < 0)
		{
			result_value = 100;
		}
		else
		{
			result_value = (((currentYearValue - prevYearValue)/prevYearValue) * 100);
			result_value = Math.round(result_value);			
		}

		
		return result_value;
	},
	type: 'PreviewRequest_CreditCustomer'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>A242291</sys_created_by>
        <sys_created_on>2019-07-16 14:17:27</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ce9cc8bfdb2677003098757a8c9619b0</sys_id>
        <sys_mod_count>138</sys_mod_count>
        <sys_name>PreviewRequest_CreditCustomer</sys_name>
        <sys_package display_value="Customer Credit Approval" source="x_adsi_cust_credit">34b04776dbd63b003098757a8c9619ba</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Customer Credit Approval">34b04776dbd63b003098757a8c9619ba</sys_scope>
        <sys_update_name>sys_script_include_ce9cc8bfdb2677003098757a8c9619b0</sys_update_name>
        <sys_updated_by>A288660</sys_updated_by>
        <sys_updated_on>2019-09-18 12:01:52</sys_updated_on>
    </sys_script_include>
</record_update>
